{% extends 'base.html.twig' %}

{% block title %}Event{% endblock %}

{% block body %}
    {# partie qui content les events #}
    <div class="box_container">
            <div class="grip" style="display: flex; align-items: center;">
                <i class="fa-solid fa-cubes fa-xl" style="color: #6b3d67; margin-right: 5px;"></i>
                <span class="grip-p" style="font-size: 18px; font-weight: 700; color: #c01eaf; font-family: 'Playfair Display', serif;"> All Event</span>
            </div>
            <div class="box-container">
            {# boucle sur les events #}
                    {% for event in events %}
                    {# partie qui content les donens de ce event #}
                    <div class="box" data-link="{{ path("Event_show",{'id':event.id}) }}">
                        <div class="box-up">
                            <div class="box-left">
                                <div class="date-box">
                                    <p>{{ event.dateEvent|date("M")}}</p>
                                    <p>{{ event.dateEvent|date("d")}}</p>
                                </div>
                                <img class="box-img" src="{{ asset('img/' ~ event.imageName) }}" alt="{{ event.imageName }}">
                            </div>
                        </div>
                        <div class="box-dawn">
                            <div class="box-dawnLeft">
                                    <p><a class="box-name" href="{{ path("Event_show",{'id':event.id}) }}"> {{event.name }} </a></p>
                                    {# condition counter la place restant pour joindre l'event #}
                                    {% set places_left = event.places - event.participant|length %}
                                    {% if places_left < 0 %}
                                    {% set places_left = 0 %}
                                    {% endif %}
                                    <p>{{ places_left }} places left</p>
                                <p class="time">{{ event.dateEvent|date("l  H:i")}} le {{ event.dateEvent|date("d/m/Y") }}</p>
                                {# condition si la utilisateur est admin on affiche la edittion de event et la suprimme #}
                                {% if is_granted("ROLE_ADMIN") %}
                                <div class="a-event">
                                    <a class="fa-solid fa-pen-to-square admin fa-lg"  href="{{ path('Event_edit', {'id':event.id}) }}"> </a>
                                    <a class="fa-solid fa-trash-can admin fa-lg" href="{{ path('Event_del', {'id':event.id}) }}"> </a>
                                </div>
                                    
                                {% endif %}
                            </div>
                            <div class="box-dawnRight">
                                <div class="date-box">
                                    <p class="adress-p" >{{ event.adresse}}
                                    {{ event.cp}} {{ event.city}}</p>
                                    {# Button participer sur l'event #}
                                    <i class="fa-solid fa-hand-peace"> <a href="{{ path('add_participant', {'id': event.id, 'userId': app.user.id}) }}">Book a Place</a></i>
                                    <p class="learn-more"><a href="{{ path("Event_show",{'id':event.id}) }}"> Learn more, Click here</a></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
            </div>
    </div>
    {# partie pagination #}
        <div class="pag">
            {{ knp_pagination_render(events)}}
        </div>
        {# <div class="load" id="load">
            <span class="span-load">Loading</span>
        </div> #}
{% endblock %}
{% block javascript %}
    <script>
// get the current page path
var currentPath = window.location.pathname;

// check if it's the login page

   </script>
   <script>
        // Get all the box cards
        const boxCards = document.querySelectorAll('.box');

        // Loop through each box card
        boxCards.forEach(boxCard => {
        // Add a click event listener to each box card
        boxCard.addEventListener('click', () => {
            // Get the link from the data-link attribute
            const link = boxCard.getAttribute('data-link');
            
            // Redirect the user to the link
            window.location.href = link;
        });
        });
    </script>
    <script>

/*----------------------------------------- Script Loading page on event click a faire  ------------------------------------------------ */
/*
        var currentPath = window.location.pathname;
        const box = document.querySelectorAll('.box');
        const load = document.querySelector('.load');
        if (currentPath === "/events") {
            // boucle sur des box card
            box.forEach(box => {

                //console.log(box);
                box.addEventListener('click', () => {
                    document.body.style.background = "white";
                    window.scrollTo(
                        {
                        top: -100
                        }
                    );
                    document.body.style.overflow = "auto";
                    document.body.style.overscrollBehavior = "none";
                    document.body.style.overflowY = "none";
                    load.style.display="block";
                    //box.style.display="none";

                    const box1 = document.querySelector('.box-container');
                        //box1.style.display="none";
                        while (box1.firstChild) {
                            box1.removeChild(box1.firstChild);
                        }
                        box1.style.padding = "400px";

                    setTimeout(() => {
                        // Function to hide loading div
                            function hideLoading() {
                                load.style.display = "none"; // Hide the loading div
                                // Add additional code to reset background color and other styles as needed
                            }
                            // Listen for the popstate event to handle back navigation
                            window.addEventListener('popstate', () => {
                                hideLoading(); // Hide loading div when navigating back
                            });
                        })
                    }, 350);
                
            })
*/
                
/*------------------------------ Script Move To Top All The Boxes With Adjust visiblity------------------------------------------------ */
            var currentPath = window.location.pathname;
        if (currentPath === "/events") {
            const timeLimitMilliseconds = 80; // Set your desired time limit in milliseconds
            const resetTimeMilliseconds = 170; // Set the time to reset the transformation

            const boxes = document.querySelectorAll('.box'); // Replace 'your-box-class' with the actual class name of your boxes

            // Function to apply the transformation
            function applyTransformation(box) {
            box.style.transform = "translateY(-22px)";
            box.style.opacity = "0.2";
            box.style.opacity = "0.3";
            box.style.opacity = "0.5";
            }

            // Function to reset the transformation
            function resetTransformation(box) {
            //box.style.transform = "translateY(0)";

            // remove the translateY(-22px)
            box.style.transform = "";
            box.style.opacity = "1";
            }

            // Apply the transformation to the boxes
            boxes.forEach(box => {
            applyTransformation(box);
            });

            // Set a timeout to reset the transformation after the time limit
            setTimeout(() => {
            boxes.forEach(box => {
                resetTransformation(box);
            });
            }, timeLimitMilliseconds + resetTimeMilliseconds);

        } 
    </script>
{% endblock javascript %}