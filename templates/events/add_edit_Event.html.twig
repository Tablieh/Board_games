{% extends 'base.html.twig' %}

{% block body %}
<a class="lien" href="{{ path('app_join_events') }}" ><i class="fa-solid fa-angle-left"></i>- Retour de Page </a>
    <div class="form" >
        
        {% if editMode %}
            <p class="add">Board Game Event Register From<span class="drow"></span></p>
        {% else %}
           <p class="add">Board Game Event Register From<span class="drow"></span></p>
        {% endif %}
                <div class="form-container form-content cover">
                    
                    <div class="form-group">
                    <h4 class="h4-form">Please Search a game</h4>
                        <input type="text" class="search" name="search" id="search" placeholder="search...">
                        <select name="games" id="games" class="select"></select>
                    </div>
                    
                    <div class="form-add">
                        {{ form_start(EventType, {'attr': {'id': 'event_type'}}) }}
                    
                        {{ form_row(EventType.name, {'attr': {'class': 'input-field '}}) }}

                        {{ form_row(EventType.date_event, {'attr': {'class': 'input-field'}}) }}

                        {{ form_row(EventType.places, {'attr': {'class': 'input-field'}}) }}
                        <div class="discription-border">
                        {{ form_row(EventType.description, {'attr': {'class': 'input-field'}}) }}
                        </div>

                        {{ form_row(EventType.adresse, {'attr': {'class': 'input-field'}}) }}

                        {{ form_row(EventType.cp, {'attr': {'class': 'input-field'}}) }}

                        {{ form_row(EventType.city, {'attr': {'class': 'input-field'}}) }}

                        {{ form_row(EventType.imageFile, {'attr': {'class': 'input-field'}}) }}

                        {{ form_row(EventType.id_game, {'attr': {'class': 'input-field'}}) }}
                        {{ form_row(EventType.Valider, {'attr': {'class': 'uk-button uk-button-primary uk-button-small btn-event'}}) }}
                        {{ form_end(EventType) }}
                    </div>
                </div> 
    </div>
{% endblock %}

{% block javascript %}
    <script>
        window.addEventListener('DOMContentLoaded', (event) => {
            
            // zone de recherche et liste déroulante
            const search = document.querySelector('#search');
            const select = document.querySelector('#games');

            select.addEventListener('change', (e) => {
                e.preventDefault();
                const gameId = select.selectedOptions[0].value;


                //console.log(gameId)


                const urlGame = '/game';
                fetch(urlGame, {
                    method: 'POST',
                    headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',                 
                    'Accept': '*/*' 
                    },            
                    // paramètre de la route du controller (gameId)
                    body: new URLSearchParams({
                        'gameId' : gameId
                    }) 
            })
            .then(async (response) => {
                const rep = await response.json();
            })
        })

        // a la sortie de l'input de recherche
        search.addEventListener('focusout',(e) => {
            // vider la liste déroulante
            select.innerText = null;
            e.preventDefault();
            //valeur sqisie dans l'input
            const searchValue = search.value;


            //console.log(searchValue);


            // URL à fetch (HomeController)
            const url = '/games';
                fetch(url, { 
                    method: 'POST',
                    headers: {
                       'Content-Type': 'application/x-www-form-urlencoded',                 
                       'Accept': '*/*' 
                    },            
                    // paramètre de la route du controller (searchValue)
                    body: new URLSearchParams({
                        'searchValue' : searchValue
                    }) 
                })
            // création des options du select 
            .then(async (response) => {
                let option = ""
                const rep = await response.json();
                // boucler sur les résultats de l'API 
                for(r in rep["games"]){
                    option = document.createElement('option');
                    option.classList.add("optionGame")
                    option.innerText = rep["games"][r]["name"] + " (" + rep["games"][r]["year_published"] + ")";
                    option.value = rep["games"][r]["id"];
                    select.append(option);
                    
                }
               /*
                const options = document.querySelectorAll(".optionGame")
                    //const choice = document.querySelector("#id_game");
                    select.addEventListener("change", () => {
                        console.log(select.value)
                        const choice = select.value
                    })
                */
                select.addEventListener("change", () => {
                    const choice = select.value;
                    const idGameField = document.querySelector("#event_id_game");
                    idGameField.value = choice;
                });

            })
        })
        })
   </script>
    {# <script>
         // get the current page path
                var currentPath = window.location.pathname;

                if (currentPath === "/addEvent") {
                const element = document.body;

                const gradient = 'linear-gradient(115deg, rgba(58, 58, 158, 0.8), rgba(136, 136, 206, 0.7))';
                const imageUrl = 'https://cdn.freecodecamp.org/testable-projects-fcc/images/survey-form-background.jpeg';

                element.style.backgroundImage = `${gradient}, url(${imageUrl})`;
                }
    </script> #}
{% endblock javascript %}