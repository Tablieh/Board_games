{% extends 'base.html.twig' %}

{% block title %}Hello Gamers!{% endblock %}

{% block body %}
{% if is_granted("ROLE_USER") %}
        <a class="lien_show" href="{{ path('app_join_events') }}" ><i class="fa-solid fa-angle-left"></i>- Previous Page </a>
{% endif %}

    <div class="BoardGame-div">
        <h2 class="h2-WelcomePage">Welcome to BoardGame-events</h2>
        <h4>Please Saarch a game</h4>
        <div class="form-group">
            <input type="text" class="search" name="search" id="search" placeholder="search...">
            <select name="games" id="games" class="select"></select>
        </div>

        <div class="game-info">
            <img class="img" id="game-img" src="{{ asset("/img/image.svg") }}" alt="">
            <div class="desc">
                <h3 class="h3-desc" id="title"></h3>
                 <div class="infos">
                    <p class="players" id="players"></p>
                    <p class="minutes" id="minutes"></p>
                </div> 
                <p class="text" id="text"></p>
            </div>
        </div>
    </div>
    
{% endblock %}

{% block javascript %}
    <script>
        {# console.log(document.querySelector('#search'))
        console.log(document.querySelector('#games'))
        console.log(document.querySelector('#game-img'))
        console.log(document.querySelector('#title'))
        console.log(document.querySelector('#text'))
        console.log(document.querySelector('#players'))
        console.log(document.querySelector('#minutes')) #}

        window.addEventListener('DOMContentLoaded', (event) => {
            // zone de recherche et liste déroulante
            const search = document.querySelector('#search');
            const select = document.querySelector('#games');
            const img = document.querySelector('#game-img');
            const title = document.querySelector('#title');
            const p = document.querySelector('#text');
            const players = document.querySelector('#players');
            const minutes = document.querySelector('#minutes');



            select.addEventListener('change', (e) => {
                e.preventDefault();
                const gameId = select.selectedOptions[0].value;
                

               
                //console.log(gameId)


                const urlGame = '/game';
                fetch(urlGame, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',                 
                        'Accept': '*/*' 
                    },            
                    // paramètre de la route du controller (gameId)
                    body: new URLSearchParams({
                        'gameId' : gameId
                    }) 
            })
            .then(async (response) => {
                const rep = await response.json();

                //console.log(rep);
                
                img.src = rep["boardgame"]['image'] ?rep["boardgame"]['image'] : '../img/image.svg';


               //console.log();


                p.innerHTML = rep["boardgame"]["description"];
                title.innerHTML = rep["boardgame"]["name"];
                players.innerHTML =  "<i class='fa-solid fa-users-line'></i> From "+rep["boardgame"]["minplayers"]+" to "+ rep["boardgame"]["maxplayers"]+" players";
                minutes.innerHTML = "<i class='fa-regular fa-clock'></i> "+rep["boardgame"]["minplaytime"]+" min";
            })
        })

        // a la sortie de l'input de recherche
        search.addEventListener('focusout',(e) => {
            // vider la liste déroulante
            select.innerText = null;
            e.preventDefault();
            //valeur sqisie dans l'input
            const searchValue = search.value;


            //console.log(searchValue);


            // URL à fetch (HomeController)
            const url = '/games';
                fetch(url, { 
                    method: 'POST',
                    headers: {
                       'Content-Type': 'application/x-www-form-urlencoded',                 
                       'Accept': '*/*' 
                    },            
                    // paramètre de la route du controller (searchValue)
                    body: new URLSearchParams({
                        'searchValue' : searchValue
                    }) 
                })
            // création des options du select 
            .then(async (response) => {
                const rep = await response.json();
                // boucler sur les résultats de l'API 
                //for(r in rep["games"]){
                    //let option = document.createElement('option');
                    //option.innerText = rep["games"][r]["name"] + " (" + rep["games"][r]["year_published"] + ")";
                    //option.value = rep["games"][r]["id"];
                    //select.append(option);
                //}
                for(r in rep["boardgame"]){
                    let option = document.createElement('option');
                    option.innerText = rep["boardgame"][r]["name"] + " (" + rep["boardgame"][r]["yearpublished"] + ")";

                    
                    option.value = rep["boardgame"][r]["@attributes"]["objectid"];
                    select.append(option);
                }

                console.log(rep["boardgame"])


            })
        })
        })
   </script>
{% endblock javascript %}